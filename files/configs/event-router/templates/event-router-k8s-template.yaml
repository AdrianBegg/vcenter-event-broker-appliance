#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ load("@ytt:json", "json")
#@ name = json.decode(data.values.bom)["vmware-event-router"]["containers"][0]["name"]
#@ version = json.decode(data.values.bom)["vmware-event-router"]["containers"][0]["version"]
#@ image = name + ":" + version

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vmware-event-router
  name: vmware-event-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vmware-event-router
  template:
    metadata:
      labels:
        app: vmware-event-router
    spec:
      serviceAccountName: vmware-event-router
      containers:
        - image: #@ image
          imagePullPolicy: IfNotPresent
          args: [ "-config", "/etc/vmware-event-router/event-router-config.yaml", "-log-level", "info" ]
          name: vmware-event-router
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - name: config
              mountPath: /etc/vmware-event-router/
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: event-router-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: vmware-event-router
  name: vmware-event-router
spec:
  ports:
    - port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app: vmware-event-router
  sessionAffinity: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vmware-event-router